-- Handle the image URLs table correctly
-- Since we're using @ElementCollection, JPA will create product_image_urls table
-- But if there was an old product_urls table, we need to handle it

DO $$
BEGIN
    -- Check if old product_urls table exists and drop it
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'product_urls') THEN
DROP TABLE product_urls CASCADE;
END IF;
END $$;

-- Create cart table
CREATE TABLE IF NOT EXISTS cart
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id    BIGINT,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_cart PRIMARY KEY (id)
    );

-- Create cart items table
CREATE TABLE IF NOT EXISTS cartitems
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cart_id    BIGINT                                  NOT NULL,
    product_id BIGINT                                  NOT NULL,
    quantity   INTEGER,
    CONSTRAINT pk_cartitems PRIMARY KEY (id)
    );

-- Create order item table
CREATE TABLE IF NOT EXISTS order_item
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_id BIGINT                                  NOT NULL,
    quantity   INTEGER,
    price      DECIMAL,
    order_id   BIGINT                                  NOT NULL,
    CONSTRAINT pk_orderitem PRIMARY KEY (id)
    );

-- Create orders table
CREATE TABLE IF NOT EXISTS orders
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id        BIGINT                                  NOT NULL,
    total_amount   DECIMAL,
    status         VARCHAR(255),
    payment_method VARCHAR(255),
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    address_id     BIGINT,
    CONSTRAINT pk_orders PRIMARY KEY (id)
    );

-- Create product_image_urls table (this matches what JPA @ElementCollection will create)
CREATE TABLE IF NOT EXISTS product_image_urls
(
    product_id BIGINT NOT NULL,
    image_urls VARCHAR(255)
    );

-- Add columns to existing tables
ALTER TABLE stock
    ADD COLUMN IF NOT EXISTS category VARCHAR(255);

ALTER TABLE stock
    ADD COLUMN IF NOT EXISTS description VARCHAR(255);

ALTER TABLE stock
    ADD COLUMN IF NOT EXISTS name VARCHAR(255);

ALTER TABLE product
    ADD COLUMN IF NOT EXISTS original_price DECIMAL;

ALTER TABLE product
    ADD COLUMN IF NOT EXISTS quantity VARCHAR(255);

-- Add constraints with IF NOT EXISTS checks
DO $$
BEGIN
    -- Add unique constraint for cart user_id
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'uc_cart_user') THEN
ALTER TABLE cart ADD CONSTRAINT uc_cart_user UNIQUE (user_id);
END IF;

    -- Add foreign key constraints
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_cartitems_on_cart') THEN
ALTER TABLE cartitems ADD CONSTRAINT FK_CARTITEMS_ON_CART FOREIGN KEY (cart_id) REFERENCES cart (id);
END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_cartitems_on_product') THEN
ALTER TABLE cartitems ADD CONSTRAINT FK_CARTITEMS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);
END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_cart_on_user') THEN
ALTER TABLE cart ADD CONSTRAINT FK_CART_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);
END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_orderitem_on_order') THEN
ALTER TABLE order_item ADD CONSTRAINT FK_ORDERITEM_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);
END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_orderitem_on_product') THEN
ALTER TABLE order_item ADD CONSTRAINT FK_ORDERITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);
END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_orders_on_address') THEN
ALTER TABLE orders ADD CONSTRAINT FK_ORDERS_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES address (id);
END IF;

    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_orders_on_user') THEN
ALTER TABLE orders ADD CONSTRAINT FK_ORDERS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);
END IF;

    -- This is the problematic constraint that was causing the error
    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'fk_product_imageurls_on_product') THEN
ALTER TABLE product_image_urls ADD CONSTRAINT fk_product_imageurls_on_product FOREIGN KEY (product_id) REFERENCES product (id);
END IF;
END $$;

-- Remove old image_url column from product table if it exists
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'product' AND column_name = 'image_url') THEN
ALTER TABLE product DROP COLUMN image_url;
END IF;
END $$;

-- Update discount table constraints
ALTER TABLE discount
    ALTER COLUMN end_date DROP NOT NULL;

ALTER TABLE discount
    ALTER COLUMN start_date DROP NOT NULL;