CREATE SEQUENCE IF NOT EXISTS otp_verification_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS reviews_seq START WITH 1 INCREMENT BY 50;

CREATE TABLE address
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    street      VARCHAR(255),
    city        VARCHAR(255),
    state       VARCHAR(255),
    country     VARCHAR(255),
    postal_code VARCHAR(255),
    is_default  BOOLEAN,
    user_id     BIGINT,
    CONSTRAINT pk_address PRIMARY KEY (id)
);

CREATE TABLE cart
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id    BIGINT,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_cart PRIMARY KEY (id)
);

CREATE TABLE cart_item
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cart_id    BIGINT,
    product_id BIGINT,
    quantity   INTEGER,
    CONSTRAINT pk_cartitem PRIMARY KEY (id)
);

CREATE TABLE category
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(255),
    CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE discount
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title               VARCHAR(255),
    description         VARCHAR(255),
    discount_percentage DOUBLE PRECISION,
    active              BOOLEAN,
    start_date          date,
    end_date            date,
    CONSTRAINT pk_discount PRIMARY KEY (id)
);

CREATE TABLE order_item
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_id BIGINT                                  NOT NULL,
    quantity   INTEGER,
    price      DECIMAL,
    order_id   BIGINT                                  NOT NULL,
    CONSTRAINT pk_orderitem PRIMARY KEY (id)
);

CREATE TABLE order_tracking
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    timestamp   TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(255),
    location    VARCHAR(255),
    updated_by  VARCHAR(255),
    order_id    BIGINT                                  NOT NULL,
    status      VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_ordertracking PRIMARY KEY (id)
);

CREATE TABLE orders
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id        BIGINT                                  NOT NULL,
    total_amount   DECIMAL,
    payment_method VARCHAR(255),
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    address_id     BIGINT,
    status         VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_orders PRIMARY KEY (id)
);

CREATE TABLE otp_verification
(
    id          BIGINT NOT NULL,
    email       VARCHAR(255),
    code        VARCHAR(255),
    expiry_date TIMESTAMP WITHOUT TIME ZONE,
    used        BOOLEAN,
    CONSTRAINT pk_otp_verification PRIMARY KEY (id)
);

CREATE TABLE payments
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    transaction_id VARCHAR(255),
    tx_ref         VARCHAR(255),
    status         VARCHAR(255),
    amount         INTEGER                                 NOT NULL,
    currency       VARCHAR(255),
    email          VARCHAR(255),
    first_name     VARCHAR(255),
    last_name      VARCHAR(255),
    payment_time   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_payments PRIMARY KEY (id)
);

CREATE TABLE product
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name           VARCHAR(255),
    description    VARCHAR(255),
    price          DECIMAL,
    original_price DECIMAL,
    sku_code       VARCHAR(255),
    brand          VARCHAR(255),
    quantity       VARCHAR(255),
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    category_id    BIGINT,
    stock_id       BIGINT,
    discount_id    BIGINT,
    CONSTRAINT pk_product PRIMARY KEY (id)
);

CREATE TABLE product_image_urls
(
    product_id BIGINT NOT NULL,
    image_urls VARCHAR(255)
);

CREATE TABLE reviews
(
    id         BIGINT  NOT NULL,
    rating     INTEGER NOT NULL,
    comment    VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    user_id    BIGINT,
    product_id BIGINT,
    CONSTRAINT pk_reviews PRIMARY KEY (id)
);

CREATE TABLE stock
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(255),
    category    VARCHAR(255),
    quantity    INTEGER                                 NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_stock PRIMARY KEY (id)
);

CREATE TABLE sub_category
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    category_id BIGINT,
    CONSTRAINT pk_subcategory PRIMARY KEY (id)
);

CREATE TABLE users
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name    VARCHAR(255),
    last_name     VARCHAR(255),
    username      VARCHAR(255),
    email         VARCHAR(255),
    phone_number  VARCHAR(255),
    password      VARCHAR(255),
    date_of_birth TIMESTAMP WITHOUT TIME ZONE,
    verified      BOOLEAN                                 NOT NULL,
    enabled       BOOLEAN                                 NOT NULL,
    role          VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE wishlist_item
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id    BIGINT,
    product_id BIGINT,
    price      DECIMAL,
    added_at   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_wishlistitem PRIMARY KEY (id)
);

ALTER TABLE address
    ADD CONSTRAINT uc_address_user UNIQUE (user_id);

ALTER TABLE cart
    ADD CONSTRAINT uc_cart_user UNIQUE (user_id);

ALTER TABLE product
    ADD CONSTRAINT uc_product_discount UNIQUE (discount_id);

ALTER TABLE product
    ADD CONSTRAINT uc_product_stock UNIQUE (stock_id);

ALTER TABLE address
    ADD CONSTRAINT FK_ADDRESS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE cart_item
    ADD CONSTRAINT FK_CARTITEM_ON_CART FOREIGN KEY (cart_id) REFERENCES cart (id);

ALTER TABLE cart_item
    ADD CONSTRAINT FK_CARTITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE cart
    ADD CONSTRAINT FK_CART_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE order_item
    ADD CONSTRAINT FK_ORDERITEM_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE order_item
    ADD CONSTRAINT FK_ORDERITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE orders
    ADD CONSTRAINT FK_ORDERS_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES address (id);

ALTER TABLE orders
    ADD CONSTRAINT FK_ORDERS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE order_tracking
    ADD CONSTRAINT FK_ORDERTRACKING_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE product
    ADD CONSTRAINT FK_PRODUCT_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES category (id);

ALTER TABLE product
    ADD CONSTRAINT FK_PRODUCT_ON_DISCOUNT FOREIGN KEY (discount_id) REFERENCES discount (id);

ALTER TABLE product
    ADD CONSTRAINT FK_PRODUCT_ON_STOCK FOREIGN KEY (stock_id) REFERENCES stock (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE sub_category
    ADD CONSTRAINT FK_SUBCATEGORY_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES category (id);

ALTER TABLE wishlist_item
    ADD CONSTRAINT FK_WISHLISTITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE wishlist_item
    ADD CONSTRAINT FK_WISHLISTITEM_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE product_image_urls
    ADD CONSTRAINT fk_product_imageurls_on_product FOREIGN KEY (product_id) REFERENCES product (id);